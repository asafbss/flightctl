name: Flightctl Downstream Release Poller

on:
  schedule:
    - cron: '*/1 * * * *'  # Every 1 minute
  workflow_dispatch:

concurrency:
  group: flightctl-release-lock
  cancel-in-progress: false

jobs:
  poll-for-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout State File
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Get Latest Release Tag
        id: get-tag
        run: |
          TAG=$(gh release list --limit 1 --repo flightctl/flightctl --json tagName --jq '.[0].tagName')
          echo "tag=$TAG" >> "$GITHUB_OUTPUT"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Fetch tags
        run: git fetch --tags
        
      - name: Get Commit SHA of Tag
        id: get-sha
        run: |
          SHA=$(git rev-list -n 1 ${{ steps.get-tag.outputs.tag }})
          echo "sha=$SHA" >> "$GITHUB_OUTPUT"

      - name: Load or Create .release-state.json
        run: |
          test -f .release-state.json || echo '{}' > .release-state.json

      - name: Check if SHA Already Processed
        id: check
        run: |
          if jq -e 'has("${{ steps.get-sha.outputs.sha }}")' .release-state.json > /dev/null; then
            echo "already_processed=true" >> "$GITHUB_OUTPUT"
          else
            echo "already_processed=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Exit If Already Processed
        if: steps.check.outputs.already_processed == 'true'
        run: echo "Already handled this SHA. Skipping."

      - name: Mark As In Progress
        if: steps.check.outputs.already_processed == 'false'
        run: |
          COMMIT_SHA="${{ steps.get-sha.outputs.sha }}"
          TIMESTAMP="$(date -u +%Y-%m-%dT%H:%M:%SZ)"
          jq ". + {\"$COMMIT_SHA\": {\"timestamp\": \"$TIMESTAMP\", \"status\": \"in-progress\"}}" .release-state.json > tmp.json
          mv tmp.json .release-state.json

      - name: Commit State Update
        if: steps.check.outputs.already_processed == 'false'
        uses: EndBug/add-and-commit@v9
        with:
          message: "Track in-progress release for ${{ steps.get-tag.outputs.tag }}"
          add: '.release-state.json'
